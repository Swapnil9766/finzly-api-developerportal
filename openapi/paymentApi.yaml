openapi: 3.0.0
servers:
  - description: Authentication
    url: https://sandbox-security-uat.finzly.io/auth/realms/BANKOS.UAT.SANDBOX.CUSTOMER/protocol/openid-connect/token
    variables:
      tenant:
        default: sandbox
        description: Tenant
info:
  version: 2.2.1
  title: Payment API
tags:
  - name: Payments
    description: |
      Payments APIs enables third-parties, banks, and bank's downstream partners to initiate and manage payments for their customers.
      
      The single payment API support the payment origination for the various payment rails such as ACH, FedWire, SWIFT, Instant Payments based on the speed preference.

      Following use cases helps you to understand the current payment capabilities exposed via Finzly Connect APIs.       
      
      1. Initiate Credit Payment (Payout)
      2. Initiate Debit Payment (Collection)
      3. Get Payment Details
      4. Search Payments
      5. Cancel a Payment
      6. Return a Payment
      7. Reverse a Payment
      8. Transfer (Book) Payment

  - name: Positive Pay
    description: |
      Postive Pay Rules APIs enable third-parties, bank's customers and downstream partners to define postive rules for ACH debits or Fedwire drawdown requests or RFP (Request For Pay) request.
      
      Postive Pay Exeption APIs enable users to approve or reject the exceptions identified by the postive pay rules engine.
      
paths:

  /v2/positivepay/rules/search:
    post:
      tags: 
        - Positive Pay
      summary: Search PositivePay Rules
      operationId: searchPositivePayRules
      description: Search positive pay rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPositivePayRuleRequest'
      responses:
        default:
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPositivePayRuleResponse'
        '200':
          description: Successfully processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPositivePayRuleResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          
  /v2/positivepay/rules:  
    post:
      tags: 
        - Positive Pay
      summary: Add PositivePay Rule
      operationId: addPositiveRules
      description: Add positive pay rule.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPositivePayRule'
      responses:
        default:
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPositivePayRuleResponse'
        '200':
          description: Successfully processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPositivePayRuleResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable    
    put:
      tags: 
        - Positive Pay
      summary: Update PositivePay Rule
      operationId: updateRules
      description: Update Positive Pay Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositivePayRule'
      responses:
        default:
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePositivePayRuleResponse'
        '200':
          description: Successfully processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePositivePayRuleResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable 
 
  
  /v2/positivepay/rules/{ruleUID}:  
    get:
      tags: 
         - Positive Pay
      summary: Get PositivePay Rule By RuleUID
      operationId: getPostivePayRule
      description: Get Positive Pay Rule
      parameters:
        - name: ruleUID
          in: path
          description: Positive Pay Rule unique id
          required: true
          schema:
            type: string
            default: 11223
      responses:
        default:
          description: Successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetPositivePayRuleUIDResponse'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetPositivePayRuleUIDResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
    delete:
      tags: 
        - Positive Pay
      summary: Delete PositivePay
      operationId: deleteRules
      description: Delete positive pay rule.
      parameters:
        - name: ruleUID
          in: path
          description: Positive Pay Rule Unique Id
          required: true
          schema:
            type: number
            format: int64
            example: 1
      responses:
        default:
          description: delete positive rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePositivePayRuleResponse'
        '200':
          description: Successfully processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePositivePayRuleResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable   

  /v2/positivepay/rules/{ruleUID}/activate:
    put:
      tags: 
        - Positive Pay
      summary: Activate PositivePay Rule
      operationId: activatePositivePayRule
      description: Activate positive pay rule
      parameters:
      - name: ruleUID
        in: path
        required: true
        description: Positive Pay Rule Unique Id
        schema:
          type: string
      responses:
        default:
          description: activate positive rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivatePositivePayRuleResponse'
        '200':
          description: Successfully processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivatePositivePayRuleResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable  

  /v2/positivepay/rules/{ruleUID}/suspend:
    put:
      tags: 
        - Positive Pay
      summary: Suspend PositivePay Rule
      operationId: suspendPositivePayRule
      description: Suspend positive pay rule.
      parameters:
      - name: ruleUID
        in: path
        required: true
        description: Positive Pay Rule Unique Id
        schema:
          type: string
      responses:
        default:
          description: suspend positive rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivatePositivePayRuleResponse'
        '200':
          description: Successfully processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivatePositivePayRuleResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable  

  /v2/positivepay/exception/search:
    post:
      tags: 
        - Positive Pay
      summary: Search PositivePay Exceptions
      operationId: searchPositivePayExceptions
      description: Return positive pay exceptions for a given criteria.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPositivePayDecisionRequest'
      responses:
        default:
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPositivePayDecisionResponse'
        '200':
          description: Successfully processed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPositivePayDecisionResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
          
  /v2/positivepay/exception/{exceptionUID}/approve:  
    put:
      tags: 
         - Positive Pay
      summary: Approve PositivePay Exception
      operationId: approvePositivePayException
      description: Approve Positive Pay Exceptions
      parameters:
      - name: exceptionUID
        in: path
        required: true
        description: A unique identifier associated with the positive pay rule exception
        schema:
          type: string
          
      responses:
        default:
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivatePositivePayExceptionResponse'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActivatePositivePayExceptionResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable

  /v2/positivepay/exception/{exceptionUID}/reject:  
    put:
      tags: 
         - Positive Pay
      summary: Reject Positive Pay Exception
      operationId: rejectExceptions
      description: Reject Positive Pay Exceptions
      parameters:
      - name: exceptionUID
        in: path
        required: true
        description: A unique identifier associated with the positive pay exception
        schema:
          type: string
      responses:
        default:
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivatePositivePayExceptionResponse'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActivatePositivePayExceptionResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
  
  /v2/positivepay/exception/approveall:
    put:
      tags: 
         - Positive Pay
      summary: Approve All PositivePay Exceptions
      operationId: approveAllExceptions
      description: Approve all positivepay exceptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveAllPositivePayExceptionRequest'
      responses:
        default:
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositivePayExceptionApproveAllResponse'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PositivePayExceptionApproveAllResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable
  

          
   
  /v3/payments/search:
    post:
      tags: 
         - Payments
      summary: Search payments
      operationId: searchPayments
      description: Search payments based on various parameters. This operation retrieve limited payment data from the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSearch'
      responses:
        default:
          description: Successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentSearchResponse'
        '200':
          description: Successfully processed request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentSearchResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable 
          
          
  /v3/payments/creditrequest:
    post:
      tags: 
        - Payments
      summary: Initiate a Credit Payment (Payout)
      operationId: createCreditPayment
      description: |
        Initiate a domestic or international credit payment [one time or recurring]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditPaymentRequest'
        description: Credit Payment Request fields
        required: true
      responses:
        default:
          description: return payment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable          
          
  /v3/payments/debitrequest:
    post:
      tags: 
        - Payments
      summary: Initiate a Debit Payment (Collection)
      operationId: createDebitPayment
      description: |
        Initiate a domestic or international debit payment [one time or recurring]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebitPaymentRequest'
        description: Debit Payment Request fields
        required: true
      responses:
        default:
          description: return payment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable            
         

  /v3/payments/booktransfer:
    post:
      tags: 
        - Payments
      summary: Initiate a Book (Transfer) Payment
      operationId: booktransfer
      description: Initiate a transfer payment request 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookTransferRequest'
        description: Book Transfer [Transfer] Request Fields
        required: true
      responses:
        default:
          description: return payment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookTransferResponse'
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookTransferResponse'
        '400':
          description: bad input parameter environment
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: bad input parameter environment
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable           
          
  /v3/payments/{paymentUID}:
    get:
      tags: 
         - Payments
      summary: Get Payment
      operationId: getPaymentByUID
      description: Retrieve a payment data using a payment unique identifier. This operation retrieve detailed payment data from the system
      parameters:
      - name: paymentUID
        in: path
        required: true
        schema:
          type: string
          description: Payment Unique Identifier
      responses:
        default:
          description: Successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetPaymentResponse'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetPaymentResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable 

  /v3/payments/{paymentUID}/cancel:
    put:
      tags: 
         - Payments
      summary: Cancel Payment
      operationId: cancelPayment
      description: Initiate a cancel payment request
      parameters:
      - name: paymentUID
        in: path
        required: true
        schema:
          type: string
          description: Unique payment Id
      responses:
        default:
          description: Successful
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CancelPaymentResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CancelPaymentResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable 
          
  /v3/payments/{paymentUID}/return:
    put:
      tags: 
         - Payments
      summary: Return a payment
      operationId: returnPayment
      description: Return a payment
      parameters:
      - name: paymentUID
        in: path
        required: true
        schema:
          type: string
          description: Payment Unique Identifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPaymentRequest'
      responses:
        default:
          description: Successful
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnPaymentResponse'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnPaymentResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable 

  /v3/payments/{paymentUID}/reverse:
    put:
      tags: 
         - Payments
      summary: Reverse a payment
      operationId: reversePayment
      description: Initiate a reverse payment request.
      parameters:
      - name: paymentUID
        in: path
        required: true
        schema:
          type: string
          description: Payment Unique Identifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversePaymentRequest'
      responses:
        default:
          description: Successful
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReversePaymentResponse'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnPaymentResponse'
        '400':
          description: Bad request
        '401':
          description: You are not authorized to access the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '503':
          description: Service unavailable 
          
security: 
  - oAuth2:
    - roles
components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: Finzly Connect API uses OAuth 2.0 authcodeflow with PKCE for end user authorization or implicit grant flow for system API accounts. A support request to Finzly is required to use implicit grant flow. 
      flows:
        authorizationCode:
          authorizationUrl: https://sandbox-security-uat.finzly.io/auth
          tokenUrl: https://sandbox-security-uat.finzly.io/auth/realms/BANKOS.UAT.SANDBOX.CUSTOMER/protocol/openid-connect/token
          scopes:
            roles: manage
  schemas:
    Error:
      properties:
        code:
          type: string
          example: invalidMethod
          description: Error code assigned by the system
        description:
          type: string
          example: Invalid HTTP method used
          description: Error description to provide addtional details about the error code

    SenderReceiverCreditorDebtorAddress:
      description: "The address related to either sender,receiver,creditor, or debtor. This is an optional field and needed only when the account does not exist in the Finzly-CRM system."    
      required:
        - addressLine1
        - countryCode
      properties:
        addressLine1:
          type: string
          maxLength: 35
          description: Bank address line 1
          example: '111 My Street'
        addressLine2:
          type: string
          maxLength: 35
          description: Bank address line 2. This is an optional field.
          example: 'Suite 210'
        city:
          type: string
          description: City Name. This is an optional field needed for the domestic payment
          maxLength: 35
          example: 'Charlotte'
        state:
          type: string
          description: State Name. This is an optional field needed for the domestic payment
          maxLength: 35
          example: 'North Carolina'
        postalCode:
          type: string
          description: Country specific postal/zip code. This is an optional field needed for the domestic payment.
          maxLength: 35
          example: '28269 etc.'
        countryCode:
          type: string
          minLength: 2
          maxLength: 2
          description: Country codes per ISO 3166 
          example: 'US, CN, AR etc.'

 
    BankAddress:
      description: "The bank address details and it is required for the bank not in US country code."
      required:
        - addressLine1
        - countryCode
      properties:
        addressLine1:
          type: string
          maxLength: 35
          description: Bank address line 1
          example: '111 My Street'
        addressLine2:
          type: string
          maxLength: 35
          description: Bank address line 2. This is an optional field.
          example: 'Suite 210'
        city:
          type: string
          description: Bank City. This is an optional field.
          maxLength: 35
          example: 'Charlotte'
        state:
          type: string
          description: Bank State. This is an optional field.
          maxLength: 35
          example: 'North Carolina'
        postalCode:
          type: string
          description: Country specific postal/zip code. This is an optional field.
          maxLength: 35
          example: '28269 etc.'
        countryCode:
          type: string
          minLength: 2
          maxLength: 2
          description: Country codes per ISO 3166.
          example: 'US, CN, AR etc.'

    Approver:
      properties:
        approverId:
          type: string
          description: User ID of the Approver
          example: 'johndoe'
        approvedDate:
          type: string
          format: dateTime
          description: Approver Date 
          example: '03-03-2023' 
    Audit:
      properties:
        submitterId:
          type: string
          description: User that submitted transaction
          example: 'johndoe'
        submissionDate:
          type: string
          format: dateTime
          description: Submission Date
          example: '03-03-2023'
        approvers:
          type: array
          items: 
            $ref: '#/components/schemas/Approver'
    Bank:
      description: "The bank or intermediary bank details is needed to process the payment and it is required when the sender/receiver/debtor/creditor are not configured in the Finzly-CRM system. Based on the bankIDType either bankId or swiftCode is required. For the speed associated with the fedwire payment rail, this will be mapped to {4100} for the receiver bank and to {4000} for the receiver intermediary bank."
      properties:
        bankIdType:
          type: string
          maxLength: 35
          description: The bank unique identifier type. Use SWIFT for the international money transfer. Use NID to identify the country specific bank id such as IBAN mainly for european countries, CLABE for Mexico, ABA for USA  etc.
          example: 'NID, SWIFT'
        bankId: 
          type: string
          maxLength: 35
          description: This is needed when the bankIdType is set to 'NID'
          example: '072000326 [ABA], 002665000000000001 [CLABE] etc.'
        swiftCode:
          type: string
          maxLength: 35
          description: SWIFT Code. This is needed when the bankIdType is set to 'SWIFT'
          example: 'CHASUS33XXX'
        name:
          type: string
          maxLength: 255
          description: Name of the bank. This is an optional for domestic [NID] and international [SWIFT] code. if not provided Finzly system will assign the name as per the directory lookup. 
          example: 'XYZ Bank'
        countryCode: 
          type: string
          minLength: 2
          maxLength: 2
          description: Country codes per ISO 3166. This is an optional field
          example: 'US, CN, AR etc.'
        address:
          $ref: '#/components/schemas/BankAddress'

    Fee:
      properties:
        feeName:
          type: string
          description: Fee Name. This is an optional field.
          example: Custom etc.
          maxLength: 20
        currency:
          type: string
          description: Fee Currency defaulted to USD if not provided.
          example: USD
        amount:
          type: number
          example: 10.00 etc.
          maxLength: 9
          description: Fee to be charged for the payment transaction.

    PaymentRecurrence:
      description: Set the payment recurrence based on the available options.
      required:
        - frequency
        - payUntil
      properties:
        frequency:
          type: string
          maxLength: 35
          example: Daily, Weekly, BiWeekly, Monthly, Quarterly, SemiAnnually, Yearly
          description: 'Frequency associated with the payment recurrence. The valid values are Daily, Weekly, BiWeekly, Monthly, Quarterly, SemiAnnually, Yearly.'
        payUntil:
          type: string
          maxLength: 25
          enum: 
           - Cancelled
           - EndDate
           - NumberOfPayments
          example: Cancelled, EndDate, NumberOfPayments
          description: 'The end of payment recurrence. If it is set to Cancelled that means payment will be processing as per the frequency until it cancelled. If it is set to EndDate that means payment will be processing per the frequency until the defined EndDate. If it is set to NumberOfPayments that means payment will be processing per the frequency until the defined number of payments. '
        endDate:
          type: string
          format: date
          example: '01-29-2023'
          description: 'This is needed when the payUntil is set to EndDate. The valid date fromat is MM-dd-yyyy.'
        numberOfPayments: 
          type: integer
          maxLength: 1000
          example: 10
          description: 'This is needed when the payUntil is set to NumberOfPayments'

    PaymentSearch:
      description: "Payment search parameters"
      properties:
        fromDate:
          type: string
          format: date
          description: "From date"
        toDate:
          type: string
          format: date      
          description: "To date"
        currency:
          type: string   
          description: "Payment currency"
        minPaymentAmount:
          type: number
          description: "Minimum payment amount"
        maxPaymentAmount:
          type: number    
          description: "Maximum payment amount"
        forexContractNo:
          type: string 
          description: "FX contract number"
        paymentType:
          type: string
          description: "Payment type"
        receiverAccountNo:
          type: string
          description: "Receiver account number"
        receiverName:
          type: string
          description: "Receiver name"
        senderAccountNo:
          type: string
          description: "Sender account number"
        sourceRefNo:
          type: string 
          description: "Payment source reference number"
        status:
          type: string
          description: "Payment status"
        page:
          type: integer
          description: Which page of results are to be returned
          example: 1
        limit:
          type: integer
          description: How many records are returned in the result set
          example: 10
 
    Groups:
      type: object
      properties:
        condition: 
          type: string
          example: OR
        type: 
          type: string
        groups: 
          type: array
          items: 
            $ref: '#/components/schemas/Groups'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Fields'
            
    Fields:
      type: object
      properties:
        id: 
          type: string
          example: beneficiaryBankSWIFT
        displayName: 
          type: string
          example: Beneficiary Bank SWIFT
        swiftCode: 
          type: string
        swiftTag: 
          type: string
        fieldLength: 
          type: integer
  
    PaymentNoteOptionValueChildren:
      type: object
      properties:
        data:
          type: object
          properties:
            displayName:
              type: string
              example: Drivers Licence
            swiftCode:
              type: string
              example: DVB001
            group:
              type: boolean
              example: false
            children:
              $ref: '#/components/schemas/PaymentNoteOptionValueChildren'
 
    AdditionalInfoCreditPayment:
      properties:
        channel:
          type: string
          maxLength: 25
          description: The channel name set by the payment origination system such as API, TELLER etc. This is an optional field and defaulted to API if it is not provided. The channel names should be defined in the Finzly system before it can be used in the API.
          example: API, TELLER etc.
        costCenter:
          type: string
          maxLength: 25
          description: This is an optional field. A cost center is a function within an organization that does not directly add to profit but still costs money to operate, such as the accounting, HR, or IT departments
          example: 12897 etc.          
        requestMethod:
          type: string
          maxLength: 45
          example: WALK-IN, PHONE-IN etc.
          description: This is an optional field. Customer payment request method from a given channel for e.g. WALK-IN, PHONE-IN etc.
        detailsOfCharges:
          type: string
          minLength: 3
          maxLength: 3
          description: who pays the payment charges. This is an optional field. For the speed associated with the FEDWIRE only BEN and SHA are applicable values. For the speed associated with the SWIFT OUR, BEN and SHA are applicable values. 
          example: OUR, BEN, or SHA
        secCode:
          type: string
          example: CCD, PPD etc.
          maxLength: 3
          description: An SEC code is a three letter code that describes how a payment was authorized by the consumer or business receiving an ACH transaction. This is an optional field needed only for the speed associated with the ACH payment rail.
        transactionTypeCode:
          type: string
          example: ANN, BUS, DEP, LOA, MIS, MOR, PEN, RLS, SAL, TAX etc.
          minLength: 3
          maxLength: 3          
          description: This is an optional field. This is a secondary secCode can be set when the sec code is set to IAT.
        receiverIdentificationNumber:
          type: string
          example: 12334356 etc.
          maxLength: 50
          description: This is an optional field. This is Receiver’s DFI Identification Number can be set when the secCode is set to IAT
        fullAmount:
          type: number
          example: 100.00
          description: Full payment amount and applicable for request for payment (RFP) request. 
        discountAmount:
          type: number
          example: 100.00
          description: Discounted amount and applicable for request for payment (RFP) request. 
        discountExpiryDateTime:
          type: string
          format: date-time
          example: "2022-01-01T17:32:25Z"
          description: Upto the specified datetime the discount amount is valid and it is mandatory if the discount amount is specified.
        fxContractNumber:
          type: string
          maxLength: 35
          example: "111234 etc."
          description: Unique identifier associated with the FX trade applicable for the international payment
        originatortoBeneficiary:
          type: string
          maxLength: 140
          description: Any additional information to be provided to the wire recipient. This is an optional field. For the speed associated with the FEDWIRE this is mapped to {6000} tag in four lines and each line will have 35 characters. 
          example: OBI Notes        
        senderToReceiverNotes:
          type: string
          maxLength: 210
          description: This is applicable for the fedwire payment specifies additional information for the Receiver. This is an optional field. For the speed associated with the FEDWIRE this is mapped to {6500} tag. 
          example: Sender To Reciever Notes
        remittanceMethod:
          type: string
          maxLength: 10
          enum:
            - EMAIL
            - URID
          description: This is applicable for the RTP payment. This is an optional field
          example: EMAIL or URID        
        paymentRemittanceNotes:
          type: string
          description: This is applicable for the ACH and RTP payment. It signifies the information originator requests its bank to transmit to the Beneficiary about the reason for a credit transfer to facilitate reconciliation by the Beneficiary. This is an optional field
          example: Remittance Notes          
        localInstruments:
          type: string
          description: Local instrument code applicable for the CTP fedwire payment or RTP payment
          example: 'COVS, ANSI, STANDARD, ZELLE etc.'
          enum:
           - COVS
           - ANSI
           - GXML
           - IXML
           - NARR
           - S820
           - SWIF
           - UEDI
           - RRMT
           - PROP
           - STANDARD
           - ZELLE
           - INTERMEDIARY
           - FOREIGN_AFFILIATE          
        referenceForBeneficiary:
          type: string
          maxLength: 16
          description: This is applicable for the fedwire payment where the local instrument set to COVS. This specifies the reference details for the beneficiary. This is mapped to fedwire {4320} tag. 
          example: RefForBeneficiary Details
        unstructuredAddendaInfo:
          type: object
          description: This is applicable for the fedwire payment where the local instrument can be S820, GXML, ANSI, IXML, NARR, SWIF, UEDI
          properties:
            addendaLength:
              type: integer
            addendaInformation:
              type: string
        proprietaryCode:
          type: string
          description: This is applicable for the fedwire payment where the local instrument set to PROP
          
    AdditionalInfoDebitPayment:
      properties:
        channel:
          type: string
          maxLength: 25
          description: The channel name set by the payment origination system such as API, TELLER etc. This is an optional field and defaulted to API if it is not provided. The channel names should be defined in the Finzly system before it can be used in the API.
          example: API, TELLER etc.
        costCenter:
          type: string
          maxLength: 25
          description: This is an optional field. A cost center is a function within an organization that does not directly add to profit but still costs money to operate, such as the accounting, HR, or IT departments
          example: 12897 etc.            
        requestMethod:
          type: string
          maxLength: 45
          example: WALK-IN, PHONE-IN etc.
          description: This is an optional field. Customer payment request method from a given channel for e.g. WALK-IN, PHONE-IN etc.
        detailsOfCharges:
          type: string
          minLength: 3
          maxLength: 3
          description: who pays the payment charges. This is an optional field. For the speed associated with the FEDWIRE only BEN and SHA are applicable values. For the speed associated with the SWIFT OUR, BEN and SHA are applicable values. 
          example: OUR, BEN, or SHA
        secCode:
          type: string
          example: CCD, PPD etc.
          maxLength: 3
          description: An SEC code is a three letter code that describes how a payment was authorized by the consumer or business receiving an ACH transaction. This is an optional field needed only for the speed associated with the ACH payment rail.
        transactionTypeCode:
          type: string
          example: ANN, BUS, DEP, LOA, MIS, MOR, PEN, RLS, SAL, TAX etc.
          minLength: 3
          maxLength: 3          
          description: This is an optional field. This is a secondary secCode can be set when the sec code is set to IAT.
        receiverIdentificationNumber:
          type: string
          example: 12334356 etc.
          maxLength: 50
          description: This is an optional field. This is Receiver’s DFI Identification Number can be set when the secCode is set to IAT.
        fullAmount:
          type: number
          example: 100.00
          description: Full payment amount and applicable for request for payment (RFP) request. 
        discountAmount:
          type: number
          example: 100.00
          description: Discounted amount and applicable for request for payment (RFP) request. 
        discountExpiryDateTime:
          type: string
          format: date-time
          example: "2022-01-01T17:32:25Z"
          description: Upto the specified datetime the discount amount is valid and it is mandatory if the discount amount is specified.
        fxContractNumber:
          type: string
          maxLength: 35
          example: "111234 etc."
          description: Unique identifier associated with the FX trade applicable for the international payment
        originatortoBeneficiary:
          type: string
          maxLength: 140
          description: Any additional information to be provided to the wire recipient. This is an optional field. For the speed associated with the FEDWIRE this is mapped to {6000} tag in four lines and each line will have 35 characters. 
          example: OBI Notes       
        senderToReceiverNotes:
          type: string
          maxLength: 210
          description: This is applicable for the fedwire payment specifies additional information for the Receiver. This is an optional field. For the speed associated with the FEDWIRE this is mapped to {6500} tag. 
          example: Sender To Reciever Notes
        paymentRemittanceNotes:
          type: string
          description: This is applicable for the ACH and RTP payment. It signifies the information originator requests its bank to transmit to the Beneficiary about the reason for a credit transfer to facilitate reconciliation by the Beneficiary. This is an optional field
          example: Remittance Notes         

    BookTransferSender:
      properties:
        accountUID:
          type: string
          example: '123452334'
          maxLength: 11
          description: Transfer payment sender bank account unique identifier exist in the Finzly-CRM system. This is an optional field, if this is provided then rest of the sender information are not needed.
        accountNumber:
          type: string
          example: '123452334 etc.'
          maxLength: 35
          description: Bank account number from where the money will be withdrawn. This is an optional field, it is required when the accountUID is not provided.
        accountType:
          type: string
          example: 'DDA or GL'
          description: Type of the account. This is an optional field, it is required when the accountUID is not provided. The possible values are DDA or GL.
          enum:
           - DDA
           - GL
        currency:
          type: string
          description: This is an optional field it will be defaulted to USD.
          maxLength: 3
          example: 'USD'
        routingNumber:
          type: string
          maxLength: 11
          description: Optional field, only required when accountUID is not provided and accountType is DDA
          example: '022300173 etc.'

    BookTransferReceiver:
      properties:
        accountUID:
          type: string
          example: '022300173 etc.'
          maxLength: 11
          description: Transfer payment sender bank account unique identifier exist in the Finzly-CRM system. This is an optional field, if this is provided then rest of the sender information are not needed.        
        accountNumber:
          type: string
          example: '123452334 etc.'
          maxLength: 35
          description: Bank account number from where the money will be withdrawn. This is an optional field, it is required when the accountUID is not provided.
        accountType:
          type: string
          example: 'DDA or GL'
          description: Type of the account. This is an optional field, it is required when the accountUID is not provided. The possible values are DDA or GL.
          enum:
           - DDA
           - GL
        currency:
          type: string
          maxLength: 3
          description: This is an optional field it will be defaulted to USD.
          example: 'USD'
        routingNumber:
          type: string
          maxLength: 11
          description: Optional field, only required when accountUID is not provided and accountType is DDA
          example: '022300173 etc.'
          
    PaymentSender:
      description: "Payment sender and account details from which the money will be deducted."
      properties:
        accountUID:
          type: string
          example: '1021 etc.'
          maxLength: 11
          description: Sender bank account unique identifier exist in the Finzly-CRM system. This is an optional field, if this is provided then rest of the sender information are not needed.
        achCompanyID:
          type: string
          example: '122334789'
          maxLength: 10
          description: ACH origination/company id is a 10-digit identifier used for ACH payment processing, to identify the entity collecting payments or sending money via ACH (also referred to as an “originator”). This is an optional field, it is required when the accountUID is not provided and payment speed associated with the ACH payment rail.
        accountNumber:
          type: string
          example: '123452334 etc.'
          maxLength: 35
          description: Sender bank account number from where the money will be withdrawn. This is an optional field, it is required when the accountUID is not provided.
        accountType:
          type: string
          example: 'Deposit or GL'
          maxLength: 35
          description: Type of the account. This is an optional field, it is required when the accountUID is not provided. The possible values are Deposit or GL.
        subAccountType:
          type: string
          example: 'Checking, Savings or GL'
          maxLength: 20
          description: This is an optional field, it is required when the accountUID is not provided and for the speed associated with the ACH payment rail (This helps to identify the ACH tran code). If the accountType is GL then subAccountType should be GL also. The possible values are Checking, Savings or GL.
        name:
          type: string
          example: 'Sender Name'
          maxLength: 50
          description: Sender name associated with the payment. This is an optional field, it is required when the accountUID is not provided. For the speed associated with the fedwire payment rail, this will be mapped to {5000} tag.
        entityType:
          type: string
          enum:
           - Consumer
           - Corporate
          example: 'Consumer or Corporate' 
          maxLength: 45
          description: Type of the entity. It is required when the accountUID is empty and accountType is Deposit. The valid values are Consumer or Corporate.
        address:
          $ref: '#/components/schemas/SenderReceiverCreditorDebtorAddress'
        bankIdType:
          type: string
          maxLength: 10
          description: This is an optional field, it is required when the accountUID is not provided. The unique identifier type to identifiy the bank details. You have two options either provide NID or SWIFT. A SWIFT code — sometimes also called a BIC number — is a standard format for Business Identifier Codes (BIC). It is an 8 to 11-character code that identifies banks globally. An NID number (a.k.a ABA/routing number) it is 9-digit numeric characters used by banks to identify specific financial institutions within the United States.
          enum:
            - NID
            - SWIFT
          example: 'NID or SWIFT'
        bankId: 
          type: string
          maxLength: 35
          description: This is an optional field required only if the sender account does not exists in the CRM system. This signifies the NID (ABA/Routing numner) or SWIFT code as per the bankIdType. For the speed associated with the fedwire payment rail, this will be mapped to {3100} tag.
          example: '101206101 or FBOLUS6LXXX'
        phone:
          type: string
          example: '18001236754'
          maxLength: 35
          description: Phone number associated with the sender. This is an optional field.
        email:
          type: string
          example: 'email@domain.com'
          maxLength: 100
          description: Email associated with the sender. This is an optional field.
        swiftTag:
          type: string
          description: This is applicable for the CTP fedwire payment where the local instrument set to COVS 
        swiftNote:
          type: string
          description: This is applicable for the CTP fedwire payment where the local instrument set to COVS
          
    PaymentReceiver:
      description: "Payment receiver and account details to which the money will be deposited."
      properties:
        accountUID:
          type: string
          example: '209219 etc.'
          maxLength: 11
          description: Receiver bank account unique identifier exist in the Finzly-CRM system. This is an optional field, if this is provided then rest of the receiver information are not needed.
        accountNumber:
          type: string
          example: '123422434'
          maxLength: 35
          description: Receiver bank account number to which money will be deposited. This is the country specific bank account number such as ABA for USA, CLABE for Mexico,IBAN mainly for european countries  etc. This is required if accountUID is not provided.
        accountType:
          type: string
          example: 'Deposit'
          maxLength: 35
          enum:
           - Deposit
          description: Type of the account. This is an optional field, it is required when the accountUID is not provided.
        subAccountType:
          type: string
          example: 'Checking, Savings'
          maxLength: 20
          description: Whether the receiver account is a Checking or Savings. This is an optional field, it is required when the accountUID is not provided and for the speed associated with the ACH payment rail (This helps to identify the ACH tran code).        
        accountCurrency:
          type: string
          example: 'USD, EUR etc.'
          minLength: 3
          maxLength: 3
          description: Receiver currency. The valid currency code should be per ISO 4217 standard.
        name:
          type: string
          example: 'Receiver name'
          maxLength: 35
          description: Receiver name associated with the payment. This is an optional field, it is required when the accountUID is not provided. For the speed associated with the fedwire payment rail, this will be mapped to {4200} tag.
        address:
          $ref: '#/components/schemas/SenderReceiverCreditorDebtorAddress'
        phone:
          type: string
          example: '18001236754'
          maxLength: 35
          description: Phone number associated with the receiver. This is an optional field.
        email:
          type: string
          example: 'email@domain.com'
          maxLength: 100
          description: Email associated with the receiver. This is an optional field.
        bank:
          $ref: '#/components/schemas/Bank'
        intermediaryBank:
          $ref: '#/components/schemas/Bank'
        swiftTag:
          type: string
          description: Beneficiary customer swift tag. This is applicable for the CTP fedwire payment where the local instrument set to COVS.
        swiftNote:
          type: string
          description: Beneficiary customer swift note.This is applicable for the CTP fedwire payment where the local instrument set to COVS   

    PaymentCreditor:
      description: "Payment creditor and account details to which the money will be deposited."
      properties:
        accountUID:
          type: string
          example: '1021 etc.'
          maxLength: 11
          description: Creditor bank account unique identifier exist in the Finzly-CRM system. This is an optional field, if this is provided then rest of the sender information are not needed.
        achCompanyID:
          type: string
          example: '122334789'
          maxLength: 10
          description: ACH company/origination id is a 10-digit identifier used by bank and Nacha, the operator of the ACH network, to identify the entity collecting payments or sending money via ACH (also referred to as an “originator”)
        accountNumber:
          type: string
          example: '123452334 etc.'
          maxLength: 35
          description: Bank account number to which the money will be deposited
        accountType:
          type: string
          example: 'Deposit or GL'
          maxLength: 35
          description: Type of the account. This is an optional field, it is required when the accountUID is not provided. The possible values are Deposit or GL.
        subAccountType:
          type: string
          example: 'Checking, Savings or GL'
          maxLength: 20
          description: This is an optional field, it is required when the accountUID is not provided and for the speed associated with the ACH payment rail (This helps to identify the ACH tran code). If the accountType is GL then subAccountType should be GL also. The possible values are Checking, Savings or GL.
        name:
          type: string
          example: 'Creditor/Sender Name'
          maxLength: 50
          description: Creditor name associated with the payment. This is an optional field, it is required when the accountUID is not provided. For the speed associated with the fedwire payment rail, this will be mapped to {5000} tag.
        entityType:
          type: string
          enum:
           - Consumer
           - Corporate
          example: 'Consumer or Corporate' 
          maxLength: 45
          description: Type of the entity. It is required when the accountUID is empty and accountType is Deposit. The valid values are Consumer or Corporate.
        address:
          $ref: '#/components/schemas/SenderReceiverCreditorDebtorAddress'
        bankIdType:
          type: string
          maxLength: 10
          description: This is an optional field, it is required when the accountUID is not provided. The unique identifier type to identifiy the bank details. You have two options either provide NID or SWIFT. A SWIFT code — sometimes also called a BIC number — is a standard format for Business Identifier Codes (BIC). It is an 8 to 11-character code that identifies banks globally. An NID number (a.k.a ABA/routing number) it is 9-digit numeric characters used by banks to identify specific financial institutions within the United States.
          example: 'NID or SWIFT'
        bankId: 
          type: string
          maxLength: 35
          description: This is an optional field required only if the sender account does not exists in the CRM system. This signifies the NID (ABA/Routing numner) or SWIFT code as per the bankIdType. For the speed associated with the fedwire payment rail, this will be mapped to {3100} tag.
          example: '101206101 or FBOLUS6LXXX'
        phone:
          type: string
          example: '18001236754'
          maxLength: 35
          description: Phone number associated with the creditor
        email:
          type: string
          example: 'email@domain.com'
          maxLength: 100
          description: Email associated with the creditor

    PaymentDebtor:
      description: "Payment debtor and account details from which the money will be deducted."
      properties:
        accountUID:
          type: string
          example: '1021 etc.'
          maxLength: 11
          description: Debtor bank account unique identifier exist in the Finzly-CRM system. This is an optional field, if this is provided then rest of the debtor information are not needed.
        accountNumber:
          type: string
          example: '123422434'
          maxLength: 35
          description: Receiver bank account number to which money will be deposited. This is the country specific bank account number such as IBAN mainly for european countries, CLABE for Mexico, ABA for USA etc. 
        accountType:
          type: string
          example: 'Deposit'
          maxLength: 35
          description: Type of the account. This is an optional field, it is required when the accountUID is not provided.
        subAccountType:
          type: string
          example: 'Checking, Savings'
          maxLength: 20
          description: Sub acount type associated with the account possible values are Checking or Savings
        accountCurrency:
          type: string
          example: 'USD, EUR etc.'
          minLength: 3
          maxLength: 3          
          description: Debtor currency. The valid currency code should be per ISO 4217 standard.
        name:
          type: string
          example: 'XYZ Name'
          maxLength: 35          
          description: Debtor name for the account. This is an optional field, it is required when the accountUID is not provided. For the speed associated with the fedwire payment rail, this will be mapped to {4200} tag.
        address:
          $ref: '#/components/schemas/SenderReceiverCreditorDebtorAddress'
        phone:
          type: string
          example: '18001236754'
          maxLength: 35
          description: Phone number associated with the debtor. This is an optional field. 
        email:
          type: string
          example: 'email@domain.com'
          maxLength: 100
          description: Email associated with the debtor. This is an optional field.
        bank:
          $ref: '#/components/schemas/Bank'
        intermediaryBank:
          $ref: '#/components/schemas/Bank'
 
          
    SearchPositivePayDecisionRequest:
      properties:
        paymentUID:
          type: string
          description: A unique identifier associated with the payment
          example: 112233
        customerUID:
          type: string
          description: Customer unique identifier associated with the customer in the Finzly's CRM system
          example: 112233          
        customerName:
          type: string
          example: ABC Company
          description: Customer name associated with the payment positive rule
        customerAccountNumber:
          type: string
          description: Bank Account Number
          example: 12387878
        decisionDateTime:
          type: string
          format: date
          description: Decision date and time in (EST)
          example: 11-01-2022 15:30:00
        amount:
          type: number
          example: 10.00
          description: Payment amount        
        positivePayDecisionStatus:
          type: string
          description: Decision status
          example: PENDING, APPROVED, REJECTED etc.
        secCode:
          type: string
          example: CCD, PPD etc.
          description: SEC code associated with the ACH postive rule
          
    SearchPositivePayDecisionResponse:
      type: object
      properties:
        status:
          type: string
          description: "This will return Success/Failed"
          example: "Success or Failure"
        code:
          type: string
          description: "This will indicate the error code in case of API error"
          example: "PPD001 etc."
        message:
          type: string
          description: "This will be the detailed error message indicating what failed and how to fix the issue"
          example: "Failed to get the positive pay exception information: <Failure Reason>."      
        data: 
          type: array
          items:
            $ref: '#/components/schemas/PositivePayExceptionDecision'

          
    PositivePayExceptionDecision:
      properties:
        exceptionUID:
          type: string
          description: Unique identifier associated with positive pay exception  
        paymentUID:
          type: string
          description: Unique identifier associated with payment
          example: '100100'
        paymentRuleType:
          type: string
          example: ACH, FEDWIRE, RFP
          description: Payment type associated with the rule such as ACH for Postive Pay, FEDWIRE for Drawdown, RTP for Request for Pay etc.
        amount:
          type: number
          format: int64
          description: Payment Amounnt 
          example: 123456789
        achCompanyID:
          type: number
          example: 122334789
          description: ACH company ID is a 10-digit identifier used by banks and Nacha, the operator of the ACH network, to identify the entity collecting payments or sending money via ACH (also referred to as an “originator”) 
        customerAccountNumber:
          type: string
          example: 12387878
          description: Bank Account Number          
        beneName:
          type: string
          example: 'XYZ Name'
          description: A beneficiary is the person or entity that will receive the payment
        exceptionReason:
          type: string
          description: Reason for the positive pay exception
          example: "Amount Mismatch"
        exceptionDateTime:
          type: string
          format: date
          description: Decision date and time in (EST)
          example: 11-01-2022 15:30:00
        expiryDateTime:
          type: string
          format: date
          example: 11-01-2022 15:30:00
          description: Positive Pay Rule Exception expiry date time in (EST)
        positivePayDecisionStatus:
          type: string
          description: Decision status
        secCode:
          type: string
          example: CCD, PPD etc.
        approvedBy:
          type: string
          description: User who approved the exception
          example: user001
        approvedDate:
          type: string
          format: date
          description: Approval date and time in (EST)
          example: 11-01-2022 15:30:00

    ActivatePositivePayExceptionResponse:
      properties:
        status:
          type: string
          description: "This will return Success/Failed"
          example: "Success or Failure"
        code:
          type: string
          description: "This will indicate the error code in case of API error"
          example: "PPD001 etc."
        message:
          type: string
          description: "This will be the detailed error message indicating what failed and how to fix the issue"
          example: "Failed to activate or suspend a positive pay exception: <Failure Reason>."
        exceptionUID:
          type: number
          format: int64
          description: Unique identifier associated with positive pay exception  
          example: 123456789

    PositivePayExceptionApproveAllResponse:
      properties:
        status:
          type: string
          description: "This will return Success/Failed"
          example: "Success or Failure"
        code:
          type: string
          description: "This will indicate the error code in case of API error"
          example: "PPD001 etc."
        message:
          type: string
          description: "This will be the detailed error message indicating what failed and how to fix the issue"
          example: "Failed to approve all positive pay rule exception: <Failure Reason>."

    SearchPositivePayRuleRequest:
      properties:
        companyBankId:
          type: string
          example: 12345678
          description: Bank unique id or routing number that is used to identify a specific bank
        companyName:
          type: string
          example: 'XYZ Name'
          description: The name of the company or entity that originated the payment request
        companyBankName:
          type: string
          example: 'XYZ Bank'
          description: Bank name where the company account is held. 
        companyAccountNumber:
          type: string
          example: 12345678
          description: A company bank account number
        amount:
          type: number
          example: 10.00
          description: Payment amount  
        customerName:
          type: string
          example: 
          description: Name of the customer who created the positive rule
        customerAccountNumber:
          type: string
          example: 12387878
          description: Customer bank account number on which the positive rule is defined.
        effectiveDate:
          type: string
          format: date
          example: '11-01-2022'
          description: Rule effective date in mm-dd-yyyy format
        expiryDate:
          type: string
          format: date
          example: '11-01-2022'
          description: Rule expiration date in mm-dd-yyyy format
        status:
          type: string
          example: Active or Expired
          description: Current state of the rule whether Active or Expired etc.
          
    SearchPositivePayRuleResponse:
      type: object
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "PP001 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to get positive rules: <Reason>"      
        data: 
          type: array
          items:
            $ref: '#/components/schemas/PositivePayRule'

    GetPositivePayRuleUIDResponse:
      type: object
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "PP001 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to get positive rule: <Reason>"
        data: 
          $ref: '#/components/schemas/PositivePayRule'

    UpdatePositivePayRuleResponse:
      properties:
        status:
          type: string
          description: "This will return Success/Failed"
          example: "Success or Failure"
        code:
          type: string
          description: "This will indicate the error code in case of API error"
          example: "PP001 etc."
        message:
          type: string
          description: "This will be the detailed error message indicating what failed and how to fix the issue"
          example: "Failed to update a positive rule: <Failure Reason>."
        ruleUID:
          type: number
          format: int64
          description: Positive rule unique id 
          example: 123456789

    PostPositivePayRuleResponse:
      properties:
        status:
          type: string
          description: "This will return Success/Failed"
          example: "Success or Failure"
        code:
          type: string
          description: "This will indicate the error code in case of API error"
          example: "PP001 etc."
        message:
          type: string
          description: "This will be the detailed error message indicating what failed and how to fix the issue"
          example: "Failed to add a positive rule: <Failure Reason>."
        ruleUID:
          type: number
          format: int64
          description: Positive rule unique id 
          example: 123456789

    DeletePositivePayRuleResponse:
      properties:
        status:
          type: string
          description: "This will return Success/Failed"
          example: "Success or Failure"
        code:
          type: string
          description: "This will indicate the error code in case of API error"
          example: "PP001 etc."
        message:
          type: string
          description: "This will be the detailed error message indicating what failed and how to fix the issue"
          example: "Failed to delete a positive rule: <Failure Reason>."
        ruleUID:
          type: number
          format: int64
          description: Positive rule unique id 
          example: 123456789

    ActivatePositivePayRuleResponse:
      properties:
        status:
          type: string
          description: "This will return Success/Failed"
          example: "Success or Failure"
        code:
          type: string
          description: "This will indicate the error code in case of API error"
          example: "PP001 etc."
        message:
          type: string
          description: "This will be the detailed error message indicating what failed and how to fix the issue"
          example: "Failed to activate or suspend a positive rule: <Failure Reason>."
        ruleUID:
          type: number
          format: int64
          description: Positive rule unique id 
          example: 123456789
          
                    
    PositivePayRule:
      type: object
      properties:
        ruleUID:
          type: number
          format: int64
          example: 123456789
          description: Positive rule unique reference id
        paymentRuleType:
          type: string
          example: ACH, FEDWIRE, RFP
          description: Payment type associated with the rule such as ACH for Postive Pay, FEDWIRE for Drawdown, RTP for Request for Pay etc.
        customerName:
          type: string
          example: ABC Company
          description: Customer name associated with the payment positive rule
        customerAccountNumber:
          type: string
          example: 12387878
          description: Bank Account Number
        achCompanyID:
          type: number
          example: 122334789
          description: ACH company ID is a 10-digit identifier used by banks and Nacha, the operator of the ACH network, to identify the entity collecting payments or sending money via ACH (also referred to as an “originator”) 
        beneBankId:
          type: string
          example: 12345678
          description: Bank unique id that is used to identify a specific bank
        beneName:
          type: string
          example: 'XYZ Name'
          description: A beneficiary is the person or entity that will receive the payment
        beneBankName:
          type: string
          example: 'Bank Name'
          description: Beneficiary bank name
        beneAccountNumber:
          type: string
          example: 12345678
          description: A beneficiary bank account number         
        amount:
          type: number
          example: 10.00
          description: Payment amount         
        currency:
          type: string
          example: USD
          description: Currency Code
          default: USD
        amountType:
          type: string
          example: Exact or Maximum
          description: Type of amount associated with the postive pay rule.          
        frequency:
          type: string
          example: Onetime, Weekly etc.
          description: Positive pay rule frequency
        secCode:
          type: string
          example: CCD, PPD etc.
          description: SEC code associated with the ACH postive rule
        status:
          type: string
          example: Active, Expired
          description: Current state of the rule whether Active or Expired etc.
        effectiveDate:
          type: string
          format: date
          example: '11-01-2022'
          description: Rule effective date in mm-dd-yyyy format
        expiryDate:
          type: string
          format: date
          example: '11-01-2022'
          description: Rule effective date in mm-dd-yyyy format

    AddPositivePayRule:
      type: object
      properties:
        paymentRuleType:
          type: string
          example: ACH, FEDWIRE, RFP
          description: Payment type associated with the rule such as ACH for Postive Pay, FEDWIRE for Drawdown, RTP for Request for Pay etc.
        customerName:
          type: string
          example: ABC Company
          description: Customer name associated with the payment positive rule
        customerAccountNumber:
          type: string
          example: 12387878
          description: Bank Account Number
        achCompanyID:
          type: number
          example: 1234567899
          description: ACH company ID is a 10-digit identifier used by banks and Nacha, the operator of the ACH network, to identify the entity collecting payments or sending money via ACH (also referred to as an “originator”) 
        beneBankId:
          type: string
          example: 12345678
          description: Bank unique id that is used to identify a specific bank
        beneName:
          type: string
          example: 'XYZ Name'
          description: A beneficiary is the person or entity that will receive the payment
        beneBankName:
          type: string
          example: 'Bank Name'
          description: Beneficiary bank name
        beneAccountNumber:
          type: string
          example: 12345678
          description: A beneficiary bank account number         
        amount:
          type: number
          example: 10.00
          description: Payment amount         
        currency:
          type: string
          example: USD
          description: Currency Code
        amountType:
          type: string
          example: Exact or Maximum
          description: Type of amount associated with the postive pay rule.          
        frequency:
          type: string
          example: Onetime, Weekly etc.
          description: Positive pay rule frequency
        secCode:
          type: string
          example: CCD, PPD etc.
          description: SEC code associated with the ACH postive rule
        effectiveDate:
          type: string
          format: date
          example: '11-01-2022'
          description: Rule effective date in mm-dd-yyyy format
        expiryDate:
          type: string
          format: date
          example: '11-01-2022'
          description: Rule effective date in mm-dd-yyyy format
          
    ApproveAllPositivePayExceptionRequest:
      properties:
        paymentUID:
          type: array
          items:
            type: string
            example: [112233,132311]
            description: A unique identifier associated with the payment requires decision. 
              

    
    CreditPaymentRequest:
      required:
        - externalReferenceId
        - paymentAmount
        - paymentCurrency
        - sender
        - receiver
        - speed
        - paymentNotes
      properties:
        externalReferenceId:
          type: string
          description: 'Unique reference id set by the originator system. For the Speed associated with the Fedwire payment this will be mapped to {3320} Tag. The {3320} tag limit is 16 characters'
          example: 'pymtref10012 or 123e4567-e89b-12d3-a456-426614174000 etc.'
        paymentAmount:
          type: number
          format: double
          example: 175.00 etc.
          description: Payment amount. The payment amount are validated as per the limit set by the payment rails or by the bank for the customer. For the Fedwire payment this will be mapped to {2000} tag.The payment rail limit per transaction are RTP upto 1M$, FedNow upto $500K, Fedwire upto $9,999,999,999.99, Same Day ACH upto 1M$.          
        paymentCurrency:
          type: string
          example: 'USD or EUR etc.'
          minLength: 3
          maxLength: 3
          description: Sender payment currency code. The valid country currency code should be per ISO 4217 standard.
        paymentDate:
          type: string
          format: date 
          example: 07-21-2022
          description: This is an optional field. It signifies the payment date on which the Finzly system will pick up the payment to process. The payment date will be default to the current date if it is empty. The valid date format is in [MM-dd-yyyy]. User can set the payment date as current date or future date however, for the payment sets to the current date, the Finzly system may change the date based upon the bank/FI configuration for-instance, If the payment SPEED associated with the ACH [SAMEDAY/REGULAR], FEDWIRE and the last submission cutoff time is passed then the payment date will be set to the next business date, or the payment request will be rejected [as per the bank chosen behavior]. 
        speed:
          type: string
          example: 'Economy, Economy Plus, Express, Instant, ON, TN, SPOT etc.'
          maxLength: 20
          description: Speed associated with the payment based on the delivery time and fee. The Speed names and associated payment rail can be configured or defined by the bank/financial institutions. The supported payment rails in FinzlyOS are ACH, Fedwire, SWIFT, RTP or FedNow. The following are the standard speed names and payment rails configured by default Economy - [ACH-REGULAR], Economy Plus [ACH-SAMEDAY], Express [FEDWIRE], Instant [FEDNOW or RTP], ON [SWIFT], TN [SWIFT], SPOT [SWIFT].
        paymentNotes:
          type: string
          default: 'Payment Notes'
          minLength: 1
          maxLength: 200
          description: Payment notes provided by the payment originator. These notes are passed to the payment network as per the specification such as for ACH upto 10 chars, Fedwire upto 35 chars [Tag 6400 - Beneficiary information], SWIFT upto 140 chars [Tag 70], RTP/FedNow upto 140 chars [ISO 20022 - RmtInf Tag]. The value will be truncated if it exceeds the data length limit.
        sender:
          $ref: '#/components/schemas/PaymentSender'
        receiver:
          $ref: '#/components/schemas/PaymentReceiver'
        fee:
          $ref: '#/components/schemas/Fee'
        recurrence:
          $ref: '#/components/schemas/PaymentRecurrence'
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfoCreditPayment'

    BookTransferRequest:
      required:
        - externalReferenceId
        - senderAccount
        - receiverAccount
        - paymentAmount
        - paymentDate
      properties:
        externalReferenceId:
          type: string
          description: "Unique reference id from a system outside of finzly. The external reference id can be used by the finzly for the request tracing (if needed)."
          example: 'Payment101'
        senderAccount:
          $ref: '#/components/schemas/BookTransferSender'
        receiverAccount:
          $ref: '#/components/schemas/BookTransferReceiver'
        paymentAmount:
          type: number
          example: 100.00
          description: Payment amount in USD you want to transfer.
        paymentDate:
          type: string
          format: date 
          example: 07-21-2022
          description: Payment date in mm-dd-yyyy format.
        channel:
          type: string
          description: Channel associated with the payment
          example: API, TELLER etc.

          
    BookTransferResponse:
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "BOOKTRF001 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to create a book transfer payment: <Reason>"
        data:
          type: object
          properties:
            paymentUID:
              type: string
            paymentStatus:
              type: string
            externalReferenceId:
              type: string
              

    PaymentResponse:
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          maxLength: 20
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "PAYMENT001 etc."
          maxLength: 20
        message:
          type: string
          maxLength: 250
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to create a payment: <Reason>"
        data:
          type: object
          properties:
            paymentUID:
              type: string
              example: 12930 etc.
              description: The unique payment reference id assigned by the Finzly-Payment system.
            paymentStatus:
              type: string
              description: The payment status assigned by the system upon creation.
              example: INITTIATED, FUTURE_DATED etc.
            externalReferenceId:
              type: string
              description: Returing the unique reference id provided by the originator system.
              example: 'pymtref10012 or 123e4567-e89b-12d3-a456-426614174000 etc.'

    DebitPaymentRequest:
      required:
        - externalReferenceId
        - paymentAmount
        - paymentCurrency
        - sender
        - receiver
        - speed
        - paymentNotes    
      properties:
        externalReferenceId:
          type: string
          description: 'Unique reference id set by the originator system. For the speed assocated with the Fedwire payment this will be mapped to {3320} Tag. The {3320} tag limit is 16 characters'
          example: 'pymtref10012 or 123e4567-e89b-12d3-a456-426614174000 etc.'
        paymentAmount:
          type: number
          format: double
          example: 123.00 etc.
          description: Payment amount. The payment amount are validated as per the limit set by the payment rails or by the bank for the customer. For the Fedwire payment this will be mapped to {2000} tag.The payment rail limit per transaction are RTP upto 1M$, FedNow upto $500K, Fedwire upto $9,999,999,999.99, Same Day ACH upto 1M$.
        paymentCurrency:
          type: string
          example: 'USD or EUR etc.'
          minLength: 3
          maxLength: 3
          description: Sender payment currency code. The valid country currency code should be per ISO 4217 standard.
        paymentDate:
          type: string
          format: date 
          example: 07-21-2022
          description: This is an optional field. It signifies the payment date on which the Finzly system will pick up the payment to process. The payment date will be default to the current date if it is empty. The valid date format is in [MM-dd-yyyy]. User can set the payment date as current date or future date however, for the payment sets to the current date, the Finzly system may change the date based upon the bank/FI configuration for-instance, If the payment SPEED associated with the ACH [SAMEDAY/REGULAR], FEDWIRE and the last submission cutoff time is passed then the payment date will be set to the next business date, or the payment request will be rejected [as per the bank chosen behavior].
        speed:
          type: string
          example: 'Economy, Economy Plus, Express, Instant'
          maxLength: 20
          description: Speed associated with the payment based on the delivery time and fee. The Speed names and associated payment rail can be configured or defined by the bank/financial institutions. The supported payment rails in FinzlyOS are ACH, Fedwire, RTP or FedNow. The following are the standard speed names and payment rails configured by default Economy - [ACH-REGULAR], Economy Plus [ACH-SAMEDAY], Express [FEDWIRE], Instant [FEDNOW or RTP].
        paymentNotes:
          type: string
          default: 'Payment Notes'
          minLength: 1
          maxLength: 200
          description: Payment notes provided by the payment originator. These notes are passed to the payment network as per the specification such as for ACH upto 10 chars, Fedwire upto 35 chars [Tag 6400 - Beneficiary information], SWIFT upto 140 chars [Tag 70], RTP/FedNow upto 140 chars [ISO 20022 - RmtInf Tag]. The value will be truncated if it exceeds the data length limit.
        creditor:
          $ref: '#/components/schemas/PaymentCreditor'
        debtor:
          $ref: '#/components/schemas/PaymentDebtor'
        fee:
          $ref: '#/components/schemas/Fee'
        recurrence:
          $ref: '#/components/schemas/PaymentRecurrence'
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfoDebitPayment'

    
    CancelPaymentResponse:
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Failure code associated with the error."
          example: "PAYMENT001 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to cancel a payment: <Reason>"
        data:
          type: object
          properties:
            paymentUID:
              type: string

    ReturnPaymentRequest:
     properties:
        achReturnCode: 
          type: string
          description: "Valid ACH return code such as R01,R02 etc."
          example: "R01"
        returnNotes:
          type: string
          description: "Return notes"
          example: "Invalid payment request."    
          
    ReturnPaymentResponse:
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "PAYMENT003 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to return a payment: <Reason>"
        data:
          type: object
          properties:
            paymentUID:
              type: string
            status:
              type: string
              description: "Payment status."
              

    ReversePaymentRequest:
     properties:
        reversalNotes:
          type: string
          description: "Reversal notes"

    ReversePaymentResponse:
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "PAYMENT004 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to reverse a payment: <Reason>"
        data:
          type: object
          properties:
            paymentUID:
              type: string
              description: "Payment unique identifier."

    GetPaymentResponse:
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "PAYMENT001 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to retrieve a payment: <Reason>"
        data:
          $ref: '#/components/schemas/GetPaymentData'
            
    PaymentSearchResponse:
      properties:
        status: 
          type: string
          description: "Status of the API request either it will be a success or a failure"
          example: "Success or Failure"
          enum:
            - Success
            - Failure
        code:
          type: string
          description: "Code associated with the error."
          example: "PAYMENT001 etc."
        message:
          type: string
          description: "Error message corresponding to the error code indicating the issue in API call along with the reason."
          example: "Failed to search a payment: <Reason>"
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchPaymentData'

    PaymentRecurrenceSearch:
      description: Set the payment recurrence based on the available options.
      required:
        - frequency
        - payUntil
      properties:
        paymentOccurrenceId:
          type: string
          maxLength: 35
          example: 12898 etc.
          description: 'Frequency unique identifier'  
        amount:
          type: string
          maxLength: 35
          example: 10.12 etc.
          description: 'Frequency payment amount'  
        frequency:
          type: string
          maxLength: 35
          example: Daily, Weekly, BiWeekly, Monthly, Quarterly, SemiAnnually, Yearly
          description: 'Frequency associated with the payment recurrence. The valid values are Daily, Weekly, BiWeekly, Monthly, Quarterly, SemiAnnually, Yearly.'
        payUntil:
          type: string
          maxLength: 25
          enum: 
           - Cancelled
           - EndDate
           - NumberOfPayments
          example: Cancelled, EndDate, NumberOfPayments
          description: 'The end of payment recurrence. If it is set to Cancelled that means payment will be processing as per the frequency until it cancelled. If it is set to EndDate that means payment will be processing per the frequency until the defined EndDate. If it is set to NumberOfPayments that means payment will be processing per the frequency until the defined number of payments. '
        startDate:
          type: string
          format: date
          example: '2023-06-23'
          description: 'Start Date for the recurrence.'
        endDate:
          type: string
          format: date
          example: '2023-07-23'
          description: 'End Date for the recurrence.'
        endNumberPayments: 
          type: integer
          maxLength: 11
          example: 10
          description: 'Recurrence NumberOfPayments'
        status: 
          type: string
          maxLength: 50
          example: Active etc.
          description: 'Recurrence status' 
          
    SearchPaymentData:
      description: Search payments based on various parameters. This provides limited payment data in comparison with GetPayment response.
      properties:
        paymentUID:
          type: integer
          description: The unique payment reference id assigned by the Finzly-Payment system.
          example: "110289 etc."
        externalReferenceId:
          type: string
          maxLength: 255
          description: 'Unique reference id set by the originator system.'
          example: 'pymtref10012 or 123e4567-e89b-12d3-a456-426614174000 etc.'
        sourceReferenceId:
          type: string
          maxLength: 255
          description: 'Source reference id signifies the bulk file id for the payment originated via FTP.'
          example: '10011 etc.'
        counterParty:
          type: string
          description: "Legal entity name exist in the Finzly-CRM system and associated with the payment."
          example: "ABC Shipping etc."
          maxLength: 255
        counterPartyId:
          type: string
          description: "Legal entity [CustomerUID] exist in the Finzly-CRM system and associated with the payment."
          example: "10920 etc."
          maxLength: 11
        customerType:
          type: string
          description: "Customer type associated with the payment."
          example: "Corporate or Consumer"
          maxLength: 45
        businessUnit:
          type: string
          description: "Processing org name assigned to the payment."
          maxLength: 255
          example: "Bank Name etc."
        businessUnitId:
         type: string
         description: "Processing org id assigned to the payment."
         maxLength: 11
         example: "189 etc."
        channel:
          type: string
          description: The channel name set by the payment origination system such as API, TELLER etc. This is an optional field and defaulted to API if it is not provided. The channel names should be defined in the Finzly system before it can be used in the API.
          example: API, TELLER etc.
          maxLength: 50
        costCenter:
          type: string
          description: The cost center associated with the payment. A cost center is also known as a cost pool or expense center
          example: "562687, Global etc."
          maxLength: 50
        book:
          type: string
          description: The book associated with the payment. The book is needed to assign proper GL accounts.
          example: "ACH, Wire etc."
          maxLength: 50
        paymentDate:
          type: string
          description: The payment date when the payment is processed
        senderUID:
          type: string
          description: "Sender unique identifier [customerUID] defined in the Finzly-CRM system and associated with the payment."
          example: '3248 etc.'
          maxLength: 11
        senderAmount:
          type: string
          description: The sender payment amount.
        senderCurrency:
          type: string
          description: Sender currency in ISO Currency Code format
          maxLength: 3
        receiverAmount:
          type: number
          description: Thereceiver payment amount.
        receiverCurrency:
          type: string
          description: Receiver currency in ISO Currency Code format
          maxLength: 3
        deliveryMethod:
          type: string
          description: One of the payment network delivery methods that includes ACH, FEDWIRE, RTP, FEDNOW, SWIFT
          example: 'ACH, FEDWIRE, RTP, FEDNOW, SWIFT'
          maxLength: 20
        paymentNotes:
          type: string
          description: "Notes associated with the payment."
          example: 'Payment for the invoice ABC123'
          maxLength: 140
        deliveryAgentType:
          type: string
          description: "Debit account type. The possible values are Deposit, GL, MCA."
          example: "Deposit, GL, MCA"
        wireType:
          type: string
          description: "Wire type associated with the payment request."
          example: 'Type of Payment - Same Day or Regular ACH. Possible values are REGULAR_ACH, SAME_DAY_ACH, WIRE, BOOK_TRANSFER, REALTIME_RTP, REALTIME_FEDNOW, SPOT_SWIFT, SAME_DAY_SWIFT, NEXT_DAY_SWIFT etc.'
          maxLength: 35
        senderName:
          type: string
          example: 'Sender Name'
          description: Sender name associated with the payment.
          maxLength: 255
        senderAccountNumber:
          type: string
          description: "Sender bank account number associated with the payment."
          example: '8982618 etc.'
          maxLength: 35
        senderAccountName:
          type: string
          maxLength: 255
          description: Sender bank account name
          example: 'DDA Account'
        senderAddress1:
          type: string
          description: Sender address 1
          maxLength: 35
        senderAddress2:
          type: string
          description: Sender address 2
          maxLength: 35
        senderCity:
          type: string
          description: Sender city
          maxLength: 35
        senderState:
          type: string
          description: Sender State
          maxLength: 35
        senderZip:
          type: string
          description: Sender Zip Code
          maxLength: 35
        senderCountryCode:
          type: string
          description: Sender Country Code
          maxLength: 35
        senderCountry:
          type: string
          description: Sender Country Name  
          maxLength: 35        
        senderAccountType:
          type: string
          description: Sender Account Type  
          maxLength: 35        
        senderBankIdType:
          type: string
          description: Sender Bank ID type such as NID, SWIFT.
          maxLength: 35 
        senderBankId:
          type: string
          description: Sender Bank ID value per the senderBankIdType 
          maxLength: 35
        senderBankName:
          type: string
          description: Sender Bank Name 
          maxLength: 255
        senderBankAddress1:
          type: string
          description: Sender Bank Address 1 
          maxLength: 35
        senderBankAddress2:
          type: string
          description: Sender Bank Address 2 
          maxLength: 35
        senderBankCity:
          type: string
          description: Sender Bank City 
          maxLength: 35
        senderBankState:
          type: string
          description: Sender Bank State 
          maxLength: 35
        senderBankZip:
          type: string
          description: Sender Bank Zip/Postal code 
          maxLength: 35
        senderBankCountry:
          type: string    
          description: Sender Bank Country Name
          maxLength: 35
        intermediarySenderName:
          type: string
          description: Sender Intermediary Bank Name
          maxLength: 25
        intermediarySenderAddress1:
          type: string
          description: Sender Intermediary Bank Address 1
          maxLength: 35
        intermediarySenderAddress2:
          type: string
          description: Sender Intermediary Bank Address 2
          maxLength: 35
        intermediarySenderCity:
          type: string
          description: Sender Intermediary Bank City
          maxLength: 35
        intermediarySenderState:
          type: string  
          description: Sender Intermediary Bank State
          maxLength: 35
        intermediarySenderZip:
          type: string
          description: Sender Intermediary Bank Zip/Postal code
          maxLength: 35
        intermediarySenderCountry:
          type: string
          description: Sender Intermediary Bank Country Name
          maxLength: 35
        intermediarySenderId:
          type: string
          description: Sender Intermediary Bank ID
          maxLength: 35
        intermediarySenderIdType:
          type: string          
          description: Sender Intermediary Bank ID Type
          maxLength: 35
        ultimateSenderName:
          type: string
          description: Ultimate Sender Name
          maxLength: 255
        ultimateSenderAccountNumber:
          type: string
          description: Ultimate Sender Account Number
          maxLength: 35
        ultimateSenderAddress1:
          type: string
          description: Ultimate Sender Address 1
          maxLength: 35
        ultimateSenderAddress2:
          type: string
          description: Ultimate Sender Address 2
          maxLength: 35
        ultimateSenderTaxId:
          type: string
          description: Ultimate Sender ACH Company ID
          maxLength: 35
        ultimateSenderCity:
          type: string
          description: Ultimate Sender City
          maxLength: 35
        ultimateSenderState:
          type: string
          description: Ultimate Sender State
          maxLength: 35
        ultimateSenderZip:
          type: string
          description: Ultimate Sender Zip/Postal code
          maxLength: 35
        ultimateSenderCountry:
          type: string
          description: Ultimate Sender Country Name
          maxLength: 35
        fboAccountName:
          type: string
          description: FBO account name
          maxLength: 255
        fboAccountNumber:
          type: string
          description: FBO account number
          maxLength: 100
        fboAccountType:
          type: string
          description: FBO account type
          maxLength: 30

        receiverName:
          type: string
          description: Receiver name
          maxLength: 255          
        receiverAccountNumber:
          type: string
          description: Receiver account number
          maxLength: 35
        receiverAccountType:
          type: string
          description: Receiver account type
          maxLength: 35
        receiverType:
          type: string  
          description: Receiver Type
          maxLength: 35
        receiverAddress1:
          type: string
          description: Receiver Address 1
          maxLength: 35
        receiverAddress2:
          type: string
          description: Receiver Address 2
          maxLength: 35
        receiverCity:
          type: string
          description: Receiver City
          maxLength: 35
        receiverState:
          type: string  
          description: Receiver State
          maxLength: 35
        receiverZip:
          type: string
          description: Receiver Zip/Postal Code
          maxLength: 35
        receiverCountry:
          type: string  
          description: Receiver Country
          maxLength: 35
        receiverPhoneNumber:
          type: string  
          description: Receiver Phone number
          maxLength: 35
        receiverEmail:
          type: string
          description: Receiver Email
          maxLength: 35
        receiverBankIdType:
          type: string  
          description: Receiver Bank ID Type such as NID, SWIFT
          maxLength: 35
        receiverBankId:
          type: string
          description: Receiver Bank ID value
          maxLength: 35
        receiverBankName:
          type: string
          description: Receiver Bank Name
          maxLength: 255
        receiverBankAddress1:
          type: string
          description: Receiver Bank Address 1
          maxLength: 35
        receiverBankAddress2:
          type: string  
          description: Receiver Bank Address 2
          maxLength: 35
        receiverBankCity:
          type: string
          description: Receiver Bank City
          maxLength: 35
        receiverBankState:
          type: string  
          description: Receiver Bank State
          maxLength: 35
        receiverBankZip:
          type: string
          description: Receiver Bank Zip/Postal Code
          maxLength: 35
        receiverBankCountry:
          type: string
          description: Receiver Bank Country Name
          maxLength: 35
        intermediaryReceiverName:
          type: string
          description: Intermediary Receiver Bank Name
          maxLength: 255
        intermediaryReceiverAddress1:
          type: string
          description: Intermediary Receiver Bank Address 1
          maxLength: 35
        intermediaryReceiverAddress2:
          type: string
          description: Intermediary Receiver Bank Address 2 
          maxLength: 35
        intermediaryReceiverCity:
          type: string
          description: Intermediary Receiver Bank City
          maxLength: 35
        intermediaryReceiverState:
          type: string
          description: Intermediary Receiver Bank State
          maxLength: 35
        intermediaryReceiverZip:
          type: string
          description: Intermediary Receiver Bank Zip/Postal Code
          maxLength: 35
        intermediaryReceiverCountry:
          type: string
          description: Intermediary Receiver Bank Country Name
          maxLength: 35
        intermediaryReceiverIdType:
          type: string            
          description: Intermediary Receiver Bank ID Type
          maxLength: 35
        intermediaryReceiverId:
          type: string
          description: Intermediary Receiver Bank ID value
          maxLength: 35
        ultimateReceiverName:
          type: string
          description: Ultimate Receiver Name
          maxLength: 255
        ultimateReceiverAccountNumber:
          type: string
          description: Ultimate Receiver Account Number
          maxLength: 35
        ultimateReceiverAddress1:
          type: string
          description: Ultimate Receiver Address 1
          maxLength: 35
        ultimateReceiverAddress2:
          type: string
          description: Ultimate Receiver Address 2
          maxLength: 35
        ultimateReceiverTaxId:
          type: string
          description: Ultimate Receiver ACH Company ID
          maxLength: 35
        ultimateReceiverCity:
          type: string
          description: Receiver Ultimate City
          maxLength: 35
        ultimateReceiverState:
          type: string
          description: Ultimate Receiver State
          maxLength: 35
        ultimateReceiverZip:
          type: string
          description: Ultimate Receiver Zip/Postal Code
          maxLength: 35
        ultimateReceiverCountry:
          type: string
          description: Ultimate Receiver Country Name
          maxLength: 35
        quoteId:
          type: string
          description: "FX quote associated with the SWIFT payment."
          example: 'Payment for the invoice ABC123'
          maxLength: 200
        forexContract:
          type: string
          example: '1325'
          description: Receiver Bank Address 1
          maxLength: 255
        recurrence:
          $ref: '#/components/schemas/PaymentRecurrenceSearch'
        status:
          type: string
          example: FUTURE_DATED
        audit:
          $ref: '#/components/schemas/Audit'
        createdBy:
          type: string
          description: Payment Created By
          example: System etc.
        creationDateTime:
          type: string
          description: Payment Creation Date Time
          example: 2023-06-23T14:56:59 etc.

    GetPaymentData:
      properties:
        paymentUID:
          type: integer
          description: The unique payment reference id assigned by the Finzly-Payment system.
          example: "110289 etc."
        externalReferenceId:
          type: string
          maxLength: 255
          description: 'Unique reference id set by the originator system.'
          example: 'pymtref10012 or 123e4567-e89b-12d3-a456-426614174000 etc.'
        sourceReferenceId:
          type: string
          maxLength: 255
          description: 'Source reference id signifies the bulk file id for the payment originated via FTP.'
          example: '10011 etc.'
        counterParty:
          type: string
          description: "Legal entity name exist in the Finzly-CRM system and associated with the payment."
          example: "ABC Shipping etc."
          maxLength: 255
        counterPartyId:
          type: string
          description: "Legal entity [CustomerUID] exist in the Finzly-CRM system and associated with the payment."
          example: "10920 etc."
          maxLength: 11
        customerType:
          type: string
          description: "Customer type associated with the payment."
          example: "Corporate or Consumer"
          maxLength: 45
        businessUnit:
          type: string
          description: "Processing org name assigned to the payment."
          maxLength: 255
          example: "Bank Name etc."
        businessUnitId:
         type: string
         description: "Processing org id assigned to the payment."
         maxLength: 11
         example: "189 etc."
        channel:
          type: string
          description: The channel name set by the payment origination system such as API, TELLER etc. This is an optional field and defaulted to API if it is not provided. The channel names should be defined in the Finzly system before it can be used in the API.
          example: API, TELLER etc.
          maxLength: 50
        costCenter:
          type: string
          description: The cost center associated with the payment. A cost center is also known as a cost pool or expense center
          example: "562687, Global etc."
          maxLength: 50
        book:
          type: string
          description: The book associated with the payment. The book is needed to assign proper GL accounts.
          example: "ACH, Wire etc."
          maxLength: 50
        paymentDate:
          type: string
          description: The payment date when the payment is processed
        senderUID:
          type: string
          description: "Sender unique identifier [customerUID] defined in the Finzly-CRM system and associated with the payment."
          example: '3248 etc.'
          maxLength: 11
        senderAmount:
          type: string
          description: The sender payment amount.
        senderCurrency:
          type: string
          description: Sender currency in ISO Currency Code format
          maxLength: 3
        receiverAmount:
          type: number
          description: Thereceiver payment amount.
        receiverCurrency:
          type: string
          description: Receiver currency in ISO Currency Code format
          maxLength: 3
        deliveryMethod:
          type: string
          description: One of the payment network delivery methods that includes ACH, FEDWIRE, RTP, FEDNOW, SWIFT
          example: 'ACH, FEDWIRE, RTP, FEDNOW, SWIFT'
          maxLength: 20
        paymentNotes:
          type: string
          description: "Notes associated with the payment."
          example: 'Payment for the invoice ABC123'
          maxLength: 140
        deliveryAgentType:
          type: string
          description: "Debit account type. The possible values are Deposit, GL, MCA."
          example: "Deposit, GL, MCA"
        wireType:
          type: string
          description: "Wire type associated with the payment request."
          example: 'Type of Payment - Same Day or Regular ACH. Possible values are REGULAR_ACH, SAME_DAY_ACH, WIRE, BOOK_TRANSFER, REALTIME_RTP, REALTIME_FEDNOW, SPOT_SWIFT, SAME_DAY_SWIFT, NEXT_DAY_SWIFT etc.'
          maxLength: 35
        senderName:
          type: string
          example: 'Sender Name'
          description: Sender name associated with the payment.
          maxLength: 255
        senderAccountNumber:
          type: string
          description: "Sender bank account number associated with the payment."
          example: '8982618 etc.'
          maxLength: 35
        senderAccountName:
          type: string
          maxLength: 255
          description: Sender bank account name
          example: 'DDA Account'
        senderAddress1:
          type: string
          description: Sender address 1
          maxLength: 35
        senderAddress2:
          type: string
          description: Sender address 2
          maxLength: 35
        senderCity:
          type: string
          description: Sender city
          maxLength: 35
        senderState:
          type: string
          description: Sender State
          maxLength: 35
        senderZip:
          type: string
          description: Sender Zip Code
          maxLength: 35
        senderCountryCode:
          type: string
          description: Sender Country Code
          maxLength: 35
        senderCountry:
          type: string
          description: Sender Country Name  
          maxLength: 35        
        senderAccountType:
          type: string
          description: Sender Account Type  
          maxLength: 35        
        senderBankIdType:
          type: string
          description: Sender Bank ID type such as NID, SWIFT.
          maxLength: 35 
        senderBankId:
          type: string
          description: Sender Bank ID value per the senderBankIdType 
          maxLength: 35
        senderBankName:
          type: string
          description: Sender Bank Name 
          maxLength: 255
        senderBankAddress1:
          type: string
          description: Sender Bank Address 1 
          maxLength: 35
        senderBankAddress2:
          type: string
          description: Sender Bank Address 2 
          maxLength: 35
        senderBankCity:
          type: string
          description: Sender Bank City 
          maxLength: 35
        senderBankState:
          type: string
          description: Sender Bank State 
          maxLength: 35
        senderBankZip:
          type: string
          description: Sender Bank Zip/Postal code 
          maxLength: 35
        senderBankCountry:
          type: string    
          description: Sender Bank Country Name
          maxLength: 35
        intermediarySenderName:
          type: string
          description: Sender Intermediary Bank Name
          maxLength: 25
        intermediarySenderAddress1:
          type: string
          description: Sender Intermediary Bank Address 1
          maxLength: 35
        intermediarySenderAddress2:
          type: string
          description: Sender Intermediary Bank Address 2
          maxLength: 35
        intermediarySenderCity:
          type: string
          description: Sender Intermediary Bank City
          maxLength: 35
        intermediarySenderState:
          type: string  
          description: Sender Intermediary Bank State
          maxLength: 35
        intermediarySenderZip:
          type: string
          description: Sender Intermediary Bank Zip/Postal code
          maxLength: 35
        intermediarySenderCountry:
          type: string
          description: Sender Intermediary Bank Country Name
          maxLength: 35
        intermediarySenderId:
          type: string
          description: Sender Intermediary Bank ID
          maxLength: 35
        intermediarySenderIdType:
          type: string          
          description: Sender Intermediary Bank ID Type
          maxLength: 35
        ultimateSenderName:
          type: string
          description: Ultimate Sender Name
          maxLength: 255
        ultimateSenderAccountNumber:
          type: string
          description: Ultimate Sender Account Number
          maxLength: 35
        ultimateSenderAddress1:
          type: string
          description: Ultimate Sender Address 1
          maxLength: 35
        ultimateSenderAddress2:
          type: string
          description: Ultimate Sender Address 2
          maxLength: 35
        ultimateSenderTaxId:
          type: string
          description: Ultimate Sender ACH Company ID
          maxLength: 35
        ultimateSenderCity:
          type: string
          description: Ultimate Sender City
          maxLength: 35
        ultimateSenderState:
          type: string
          description: Ultimate Sender State
          maxLength: 35
        ultimateSenderZip:
          type: string
          description: Ultimate Sender Zip/Postal code
          maxLength: 35
        ultimateSenderCountry:
          type: string
          description: Ultimate Sender Country Name
          maxLength: 35
        fboAccountName:
          type: string
          description: FBO account name
          maxLength: 255
        fboAccountNumber:
          type: string
          description: FBO account number
          maxLength: 100
        fboAccountType:
          type: string
          description: FBO account type
          maxLength: 30
        receiverName:
          type: string
          description: Receiver name
          maxLength: 255          
        receiverAccountNumber:
          type: string
          description: Receiver account number
          maxLength: 35
        receiverAccountType:
          type: string
          description: Receiver account type
          maxLength: 35
        receiverType:
          type: string  
          description: Receiver Type
          maxLength: 35
        receiverAddress1:
          type: string
          description: Receiver Address 1
          maxLength: 35
        receiverAddress2:
          type: string
          description: Receiver Address 2
          maxLength: 35
        receiverCity:
          type: string
          description: Receiver City
          maxLength: 35
        receiverState:
          type: string  
          description: Receiver State
          maxLength: 35
        receiverZip:
          type: string
          description: Receiver Zip/Postal Code
          maxLength: 35
        receiverCountry:
          type: string  
          description: Receiver Country
          maxLength: 35
        receiverPhoneNumber:
          type: string  
          description: Receiver Phone number
          maxLength: 35
        receiverEmail:
          type: string
          description: Receiver Email
          maxLength: 35
        receiverBankIdType:
          type: string  
          description: Receiver Bank ID Type such as NID, SWIFT
          maxLength: 35
        receiverBankId:
          type: string
          description: Receiver Bank ID value
          maxLength: 35
        receiverBankName:
          type: string
          description: Receiver Bank Name
          maxLength: 255
        receiverBankAddress1:
          type: string
          description: Receiver Bank Address 1
          maxLength: 35
        receiverBankAddress2:
          type: string  
          description: Receiver Bank Address 2
          maxLength: 35
        receiverBankCity:
          type: string
          description: Receiver Bank City
          maxLength: 35
        receiverBankState:
          type: string  
          description: Receiver Bank State
          maxLength: 35
        receiverBankZip:
          type: string
          description: Receiver Bank Zip/Postal Code
          maxLength: 35
        receiverBankCountry:
          type: string
          description: Receiver Bank Country Name
          maxLength: 35
        intermediaryReceiverIdType:
          type: string            
          description: Intermediary Receiver Bank ID Type
          maxLength: 35
        intermediaryReceiverId:
          type: string
          description: Intermediary Receiver Bank ID value
          maxLength: 35          
        intermediaryReceiverName:
          type: string
          description: Intermediary Receiver Bank Name
          maxLength: 255
        intermediaryReceiverAddress1:
          type: string
          description: Intermediary Receiver Bank Address 1
          maxLength: 35
        intermediaryReceiverAddress2:
          type: string
          description: Intermediary Receiver Bank Address 2 
          maxLength: 35
        intermediaryReceiverCity:
          type: string
          description: Intermediary Receiver Bank City
          maxLength: 35
        intermediaryReceiverState:
          type: string
          description: Intermediary Receiver Bank State
          maxLength: 35
        intermediaryReceiverZip:
          type: string
          description: Intermediary Receiver Bank Zip/Postal Code
          maxLength: 35
        intermediaryReceiverCountry:
          type: string
          description: Intermediary Receiver Bank Country Name
          maxLength: 35
        ultimateReceiverName:
          type: string
          description: Ultimate Receiver Name
          maxLength: 255
        ultimateReceiverAccountNumber:
          type: string
          description: Ultimate Receiver Account Number
          maxLength: 35
        ultimateReceiverAddress1:
          type: string
          description: Ultimate Receiver Address 1
          maxLength: 35
        ultimateReceiverAddress2:
          type: string
          description: Ultimate Receiver Address 2
          maxLength: 35
        ultimateReceiverTaxId:
          type: string
          description: Ultimate Receiver ACH Company ID
          maxLength: 35
        ultimateReceiverCity:
          type: string
          description: Receiver Ultimate City
          maxLength: 35
        ultimateReceiverState:
          type: string
          description: Ultimate Receiver State
          maxLength: 35
        ultimateReceiverZip:
          type: string
          description: Ultimate Receiver Zip/Postal Code
          maxLength: 35
        ultimateReceiverCountry:
          type: string
          description: Ultimate Receiver Country Name
          maxLength: 35
        quoteId:
          type: string
          description: "FX quote associated with the SWIFT payment."
          example: 'Payment for the invoice ABC123'
          maxLength: 200
        forexContract:
          type: string
          example: '1325'
          description: FX Contract Number
          maxLength: 35
        imad: 
          type: string
          description: It is a unique number given to each FedWire payment when using the Federal Reserve Bank Service and can be used to investigate and track wire transfers
          example: 20220627MMQCTR7B000012
        omad: 
          type: string
          description: The OMAD indicates a unique number assigned to each transfer providing delivery-related information
          example: 0328QMGFNP6400002503281343FT0120232023          
        fee:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
        recurrence:
          $ref: '#/components/schemas/PaymentRecurrenceSearch'
        status:
          type: string
          example: FUTURE_DATED
        audit:
          $ref: '#/components/schemas/Audit'
        createdBy:
          type: string
          description: Payment Created By
          example: System etc.
        creationDateTime:
          type: string
          description: Payment Creation Date Time
          example: 2023-06-23T14:56:59 etc.
